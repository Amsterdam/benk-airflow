
trigger:
- development

pool:
  vmImage: ubuntu-latest

pr:
  branches:
    include:
    - development
    - releases/*
  paths:
    include:
    - "*"
    exclude:
    - airflow-local
  drafts: true # whether to build draft PRs, defaults to true

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.9'

- script: rm -rf venv && python3.9 -m venv venv
  displayName: 'Create new venv'

- script: source venv/bin/activate && python3.9 -m pip install --upgrade pip setuptools wheel
  displayName: 'Install tools'

- script: source venv/bin/activate && python3.9 -m pip install -r requirements-dev.txt
  displayName: 'Install requirements-dev'

- script: source venv/bin/activate && python3.9 -m pip install pytest-azurepipelines~=1.0.4
  displayName: 'Install pytest-azurepipelines'

- script: source venv/bin/activate &&  mypy dags/benk
  displayName: 'Run MyPy'

- script: >
    source venv/bin/activate && 
    export COVERAGE_FILE="/tmp/.coverage"
    && coverage run --source=dags/benk -m pytest --junitxml=junit/test-results.xml 
    && coverage xml --fail-under=100
    && coverage report --fail-under=100 --show-missing
  displayName: 'Run PyTest + Coverage'

- script: source venv/bin/activate && black --check --diff dags/benk
  displayName: 'Run Black'

- script: source venv/bin/activate && isort --check --diff --src-path=dags/benk dags/benk
  displayName: 'Run iSort'

- script: source venv/bin/activate && flake8 dags/benk
  displayName: 'Run Flake8'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
